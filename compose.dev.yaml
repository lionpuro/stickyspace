services:
  postgres:
    image: postgres:17.4
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
    ports:
      - "${POSTGRES_HOST_PORT}:${POSTGRES_DOCKER_PORT}"
    volumes:
      - ./tmp/db-data:/var/lib/postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
  migrate:
    image: migrate/migrate
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./sql/migrations:/migrations
    command: [
      "-path",
      "/migrations/",
      "-database",
      "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_DOCKER_PORT}/${POSTGRES_DB}?sslmode=disable",
      "up"
    ]
  caddy:
    network_mode: host
    build:
      context: .
      dockerfile_inline: |
        FROM caddy:latest
        COPY caddyfile_dev /etc/caddy/Caddyfile
      network: host
    restart: no
    ports:
      - "4000:4000"
